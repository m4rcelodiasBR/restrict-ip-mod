<?php

/**
 * @file
 * The restrict_ip module file.
 */

use Drupal\block\BlockInterface;
use Drupal\block\BlockRepositoryInterface;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Access\AccessResultInterface;
use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\Core\Session\AccountInterface;

/**
 * Implements hook_block_access().
 *
 * Blocks access to all blocks except the system_main_block
 * if the user does not have access to the current page.
 */
function restrict_ip_block_access(BlockInterface $block, $operation, AccountInterface $account): AccessResultInterface {
  if ($operation == 'view') {
    if (\Drupal::service('restrict_ip.service')->userIsBlocked()) {
      if ($block->getPluginId() != 'system_main_block') {
        return AccessResult::forbidden();
      }
    }
  }

  return AccessResult::neutral();
}

/**
 * Override of template_preprocess_page().
 *
 * This function unsets tabs and various
 * other page elements for blocked users,
 * so they are not rendered.
 */
function restrict_ip_preprocess_page(&$build): void {
  if (\Drupal::service('restrict_ip.service')->userIsBlocked()) {
    $regions = system_region_list(\Drupal::service('theme.manager')->getActiveTheme()->getName(), BlockRepositoryInterface::REGIONS_ALL);
    unset($regions['content']);

    $whitelisted_regions = Drupal::service('module_handler')->invokeAll('restrict_ip_whitelisted_regions');
    foreach ($whitelisted_regions as $wr) {
      unset($regions[$wr]);
    }

    foreach (array_keys($regions) as $region) {
      if (isset($build['page'][$region])) {
        unset($build['page'][$region]);
      }
    }

    if (isset($build['tabs'])) {
      if (isset($build['tabs']['#primary'])) {
        $build['tabs']['#primary'] = [];
      }
      if (isset($build['tabs']['#secondary'])) {
        $build['tabs']['#primary'] = [];
      }
    }
    $build['title_prefix'] = [];
    $build['title_suffix'] = [];
    $build['main_menu'] = [];
    $build['secondary_menu'] = [];
    $build['action_links'] = [];
  }
}

/**
 * Override of template_preprocess_html().
 *
 * This function unsets $page_top and $page_bottom so that they are not passed
 * to html twig file, preventing these regions from being rendered.
 */
function restrict_ip_preprocess_html(&$build): void {
  if (\Drupal::service('restrict_ip.service')->userIsBlocked()) {
    if (isset($build['page_top'])) {
      unset($build['page_top']);
    }
    if (isset($build['page_top'])) {
      unset($build['page_bottom']);
    }
  }
}

/**
 * Implements hook_js_alter().
 *
 * This function removes all javascript from the page
 * except jQuery and any javascript provided by this module.
 */
function restrict_ip_js_alter(&$javascript, AttachedAssetsInterface $assets): void {
  if (\Drupal::service('restrict_ip.service')->userIsBlocked()) {
    $whitelisted_js_keys = [
      'core/assets/vendor/jquery/jquery.min.js',
      'core/assets/vendor/jquery/jquery.js',
      \Drupal::service('extension.list.module')->getPath('restrict_ip') . '/js/mail_fix.js',
    ];

    $whitelisted_js_keys = array_merge($whitelisted_js_keys, \Drupal::service('module_handler')->invokeAll('restrict_ip_whitelisted_js_keys'));
    foreach (array_keys($javascript) as $key) {
      if (!in_array($key, $whitelisted_js_keys)) {
        unset($javascript[$key]);
      }
    }
  }
}
